"sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
View(dead_HR_by_sim)
View(alive_home_range_sizes)
View(alive_home_range_sizes)
home_range_sizes <- merge(dead_home_range_sizes, alive_home_range_sizes, by = "V1")
View(home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_dead")
for (i in 1:length(files)) {
if (i == 1) {dead_home_range_sizes <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
} else {
d <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
for (i in 1:length(files)) {
if (i == 1) {alive_home_range_sizes <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
} else {
d <-read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "V1")
View(home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_dead")
for (i in 1:length(files)) {
if (i == 1) {dead_home_range_sizes <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
} else {
d <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
for (i in 1:length(files)) {
if (i == 1) {alive_home_range_sizes <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
} else {
d <-read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "V1")
View(home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_dead")
for (i in 1:length(files)) {
if (i == 1) {dead_home_range_sizes <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
} else {
d <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
for (i in 1:length(files)) {
if (i == 1) {alive_home_range_sizes <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
} else {
d <-read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
View(alive_home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_dead")
for (i in 1:length(files)) {
if (i == 1) {dead_home_range_sizes <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
} else {
d <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
colnames(home_range_sizes) <- c("deer_id", "sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
for (i in 1:length(files)) {
if (i == 1) {alive_home_range_sizes <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
} else {
d <-read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
colnames(home_range_sizes) <- c("deer_id", "sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "V1")
View(home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_dead")
for (i in 1:length(files)) {
if (i == 1) {dead_home_range_sizes <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
} else {
d <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
colnames(dead_home_range_sizes) <- c("deer_id", "sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
for (i in 1:length(files)) {
if (i == 1) {alive_home_range_sizes <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
} else {
d <-read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
colnames(alive_home_range_sizes) <- c("deer_id", "sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "V1")
View(home_range_sizes)
View(alive_home_range_sizes)
View(dead_home_range_sizes)
View(dead_home_range_sizes)
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "deer_id")
View(home_range_sizes)
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "deer_id", suffix = c(".alive", ".dead"))
View(home_range_sizes)
sim_cols <- paste0("sim_", 1:20)
home_range_sizes <- home_range_sizes %>%
mutate(across(all_of(sim_cols),
~ coalesce(get(paste0(cur_column(), ".alive")), get(paste0(cur_column(), ".dead"))),
.names = "{.col}")) %>%
select(ID, all_of(sim_cols))  # Keep only the ID and merged sim columns
View(home_range_sizes)
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "deer_id", suffix = c(".alive", ".dead"))
sim_cols <- paste0("sim_", 1:20)
# Coalesce alive and dead columns for each sim
for (col in sim_cols) {
alive_col <- paste0(col, ".alive")
dead_col  <- paste0(col, ".dead")
merged_df[[col]] <- coalesce(merged_df[[alive_col]], merged_df[[dead_col]])
}
# Coalesce alive and dead columns for each sim
for (col in sim_cols) {
alive_col <- paste0(col, ".alive")
dead_col  <- paste0(col, ".dead")
home_range_sizes[[col]] <- coalesce(home_range_sizes[[alive_col]], home_range_sizes[[dead_col]])
}
# Keep only ID and the newly coalesced sim columns
final_df <- home_range_sizes %>%
select(ID, all_of(sim_cols))
# Keep only ID and the newly coalesced sim columns
final_df <- home_range_sizes %>%
select(deer_id, all_of(sim_cols))
View(final_df)
# Function to extract deer ID from filename (assumes it's the number at the end before .csv)
extract_id <- function(filename) {
as.numeric(str_extract(filename, "\\d+(?=\\.csv$)"))
}
# --- Dead deer files ---
files_dead <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_dead", full.names = TRUE)
# Sort files by extracted deer ID
files_dead <- files_dead[order(sapply(basename(files_dead), extract_id))]
library(stringr)
# Function to extract deer ID from filename (assumes it's the number at the end before .csv)
extract_id <- function(filename) {
as.numeric(stringr::str_extract(filename, "(?<=_)\\d+(?=\\.csv$)"))
}
# --- Dead deer files ---
files_dead <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_dead", full.names = TRUE)
# Sort files by extracted deer ID
files_dead <- files_dead[order(sapply(basename(files_dead), extract_id))]
# Read and merge dead deer files
for (i in seq_along(files_dead)) {
d <- as.data.frame(t(read.csv(files_dead[i], header = FALSE)))
if (i == 1) {
dead_home_range_sizes <- d
} else {
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
files_dead
library(stringr)
# Function to extract deer ID from filename (assumes it's the number at the end before .csv)
extract_id <- function(filename) {
as.numeric(stringr::str_extract(filename, "(?<=_)\\d+(?=\\.csv$)"))
}
# --- Dead deer files ---
files_dead <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_dead", full.names = TRUE)
# Sort files by extracted deer ID
files_dead <- files_dead[order(sapply(basename(files_dead), extract_id))]
# Read and merge dead deer files
for (i in seq_along(files_dead)) {
d <- as.data.frame(t(read.csv(files_dead[i], header = FALSE)))
if (i == 1) {
dead_home_range_sizes <- d
} else {
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
colnames(dead_home_range_sizes) <- c("deer_id", paste0("sim_", 1:20))
# --- Alive deer files ---
files_alive <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_still", full.names = TRUE)
# Sort files by extracted deer ID
files_alive <- files_alive[order(sapply(basename(files_alive), extract_id))]
# Read and merge alive deer files
for (i in seq_along(files_alive)) {
d <- read.csv(files_alive[i], header = FALSE)
if (i == 1) {
alive_home_range_sizes <- d
} else {
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
colnames(alive_home_range_sizes) <- c("deer_id", paste0("sim_", 1:20))
View(alive_home_range_sizes)
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "deer_id")
View(home_range_sizes)
files_dead
files_alive
library(stringr)
# Function to extract deer ID from filename (assumes it's the number at the end before .csv)
extract_id <- function(filename) {
as.numeric(stringr::str_extract(filename, "(?<=_)\\d+(?=\\.csv$)"))
}
# --- Dead deer files ---
files_dead <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_dead", full.names = TRUE)
# Sort files by extracted deer ID
files_dead <- files_dead[order(sapply(basename(files_dead), extract_id))]
# Read and merge dead deer files
for (i in seq_along(files_dead)) {
d <- as.data.frame(t(read.csv(files_dead[i], header = FALSE)))
if (i == 1) {
dead_home_range_sizes <- d
} else {
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
colnames(dead_home_range_sizes) <- c("deer_id", paste0("sim_", 1:20))
# --- Alive deer files ---
files_alive <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_still", full.names = TRUE)
# Sort files by extracted deer ID
files_alive <- files_alive[order(sapply(basename(files_alive), extract_id))]
# Read and merge alive deer files
for (i in seq_along(files_alive)) {
d <- read.csv(files_alive[i], header = FALSE)
if (i == 1) {
alive_home_range_sizes <- d
} else {
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
colnames(alive_home_range_sizes) <- c("deer_id", paste0("sim_", 1:20))
View(alive_home_range_sizes)
View(dead_home_range_sizes)
home_range_sizes <- merge(dead_home_range_sizes, alive_home_range_sizes, by = "deer_id")
View(home_range_sizes)
library(stringr)
# Function to extract deer ID from filename (assumes it's the number at the end before .csv)
extract_id <- function(filename) {
as.numeric(stringr::str_extract(filename, "(?<=_)\\d+(?=\\.csv$)"))
}
# --- Dead deer files ---
files_dead <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_dead", full.names = TRUE)
# Sort files by extracted deer ID
files_dead <- files_dead[order(sapply(basename(files_dead), extract_id))]
# Read and merge dead deer files
for (i in seq_along(files_dead)) {
d <- as.data.frame(t(read.csv(files_dead[i], header = FALSE)))
if (i == 1) {
dead_home_range_sizes <- d
} else {
dead_home_range_sizes <- full_join(dead_home_range_sizes, d, by = "V1")
}
}
colnames(dead_home_range_sizes) <- c("deer_id", paste0("sim_", 1:20))
# --- Alive deer files ---
files_alive <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_still", full.names = TRUE)
# Sort files by extracted deer ID
files_alive <- files_alive[order(sapply(basename(files_alive), extract_id))]
# Read and merge alive deer files
for (i in seq_along(files_alive)) {
d <- read.csv(files_alive[i], header = FALSE)
if (i == 1) {
alive_home_range_sizes <- d
} else {
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
colnames(alive_home_range_sizes) <- c("deer_id", paste0("sim_", 1:20))
View(dead_home_range_sizes)
home_range_sizes <- full_join(dead_home_range_sizes, alive_home_range_sizes, by = "deer_id")
View(home_range_sizes)
View(dead_home_range_sizes)
View(dead_home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
for (i in 1:length(files)) {
if (i == 1) {home_range_sizes <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
} else {
d <-read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
home_range_sizes <- full_join(home_range_sizes, d, by = "V1")
}
}
colnames(home_range_sizes) <- c("deer_id", "sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
mean_HR_by_sim <- t(as.data.frame(colMeans(home_range_sizes[,-1], na.rm = TRUE)))
sd_HR_by_sim <- t(as.data.frame(apply(home_range_sizes[,-1], na.rm = TRUE, 2, sd))) # 2 = columns
alive_HR_by_sim <- rbind(mean_HR_by_sim, sd_HR_by_sim)
colnames(alive_HR_by_sim) <- c("sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
row.names(alive_HR_by_sim) <- c("mean_HR_size_ha", "sd_HR_size_ha")
View(home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
for (i in 1:length(files)) {
if (i == 1) {home_range_sizes <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
} else {
d <-read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
home_range_sizes <- full_join(home_range_sizes, d, by = "V1")
}
}
colnames(home_range_sizes) <- c("deer_id", "sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
mean_HR_by_sim <- t(as.data.frame(colMeans(home_range_sizes[,-1], na.rm = TRUE)))
sd_HR_by_sim <- t(as.data.frame(apply(home_range_sizes[,-1], na.rm = TRUE, 2, sd))) # 2 = columns
alive_HR_by_sim <- rbind(mean_HR_by_sim, sd_HR_by_sim)
colnames(alive_HR_by_sim) <- c("sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
row.names(alive_HR_by_sim) <- c("mean_HR_size_ha", "sd_HR_size_ha")
means <- rowMeans(alive_HR_by_sim)
View(home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_dead")
for (i in 1:length(files)) {
if (i == 1) {home_range_sizes <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
} else {
d <- as.data.frame(t(read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)))
home_range_sizes <- full_join(home_range_sizes, d, by = "V1")
}
}
colnames(home_range_sizes) <- c("deer_id", "sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
View(home_range_sizes)
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_dead")
library(dplyr)
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "home-range-sizes_still")
for (i in 1:length(files)) {
if (i == 1) {home_range_sizes <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
} else {
d <-read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
home_range_sizes <- full_join(home_range_sizes, d, by = "V1")
}
}
colnames(home_range_sizes) <- c("deer_id", "sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
mean_HR_by_sim <- t(as.data.frame(colMeans(home_range_sizes[,-1], na.rm = TRUE)))
sd_HR_by_sim <- t(as.data.frame(apply(home_range_sizes[,-1], na.rm = TRUE, 2, sd))) # 2 = columns
alive_HR_by_sim <- rbind(mean_HR_by_sim, sd_HR_by_sim)
colnames(alive_HR_by_sim) <- c("sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
row.names(alive_HR_by_sim) <- c("mean_HR_size_ha", "sd_HR_size_ha")
means <- rowMeans(alive_HR_by_sim)
means
View(alive_HR_by_sim)
### Function to extract sim IDs
extract_id <- function(filename) {
as.numeric(stringr::str_extract(filename, "(?<=_)\\d+(?=\\.csv$)"))
}
library(dplyr)
library(stringr)
### Function to extract sim IDs
extract_id <- function(filename) {
as.numeric(stringr::str_extract(filename, "(?<=_)\\d+(?=\\.csv$)"))
}
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_still", full.names = TRUE)
# Sort files by extracted deer ID
files <- files[order(sapply(basename(files), extract_id))]
# Read and merge alive deer files
for (i in seq_along(files)) {
d <- read.csv(files[i], header = FALSE)
if (i == 1) {
alive_home_range_sizes <- d
} else {
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
colnames(alive_home_range_sizes) <- c("deer_id", paste0("sim_", 1:20))
View(alive_home_range_sizes)
mean_HR_by_sim <- t(as.data.frame(colMeans(home_range_sizes[,-1], na.rm = TRUE)))
sd_HR_by_sim <- t(as.data.frame(apply(home_range_sizes[,-1], na.rm = TRUE, 2, sd))) # 2 = columns
alive_HR_by_sim <- rbind(mean_HR_by_sim, sd_HR_by_sim)
colnames(alive_HR_by_sim) <- c("sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
row.names(alive_HR_by_sim) <- c("mean_HR_size_ha", "sd_HR_size_ha")
means <- rowMeans(alive_HR_by_sim)
View(alive_home_range_sizes)
View(alive_HR_by_sim)
library(dplyr)
library(stringr)
library(dplyr)
library(stringr)
### Function to extract sim IDs
extract_id <- function(filename) {
as.numeric(stringr::str_extract(filename, "(?<=_)\\d+(?=\\.csv$)"))
}
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_still", full.names = TRUE)
# Sort files by extracted deer ID
files <- files[order(sapply(basename(files), extract_id))]
files <- list.files(path = "~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results",
pattern = "home-range-sizes_still", full.names = TRUE)
# Sort files by extracted deer ID
files <- files[order(sapply(basename(files), extract_id))]
# Read and merge alive deer files
for (i in seq_along(files)) {
d <- read.csv(files[i], header = FALSE)
if (i == 1) {
alive_home_range_sizes <- d
} else {
alive_home_range_sizes <- full_join(alive_home_range_sizes, d, by = "V1")
}
}
View(alive_home_range_sizes)
colnames(alive_home_range_sizes) <- c("deer_id", paste0("sim_", 1:20))
mean_HR_by_sim <- t(as.data.frame(colMeans(home_range_sizes[,-1], na.rm = TRUE)))
mean_HR_by_sim <- t(as.data.frame(colMeans(alive_home_range_sizes[,-1], na.rm = TRUE)))
sd_HR_by_sim <- t(as.data.frame(apply(alive_home_range_sizes[,-1], na.rm = TRUE, 2, sd))) # 2 = columns
alive_HR_by_sim <- rbind(mean_HR_by_sim, sd_HR_by_sim)
colnames(alive_HR_by_sim) <- c("sim_1","sim_2", "sim_3", "sim_4", "sim_5", "sim_6", "sim_7", "sim_8", "sim_9", "sim_10", "sim_11","sim_12", "sim_13", "sim_14", "sim_15", "sim_16", "sim_17", "sim_18", "sim_19", "sim_20")
row.names(alive_HR_by_sim) <- c("mean_HR_size_ha", "sd_HR_size_ha")
View(alive_home_range_sizes)
means <- rowMeans(alive_HR_by_sim)
View(alive_HR_by_sim)
means
setwd("~/Corsica deer")
release_points <- vect("corsica_deer_ABM/Modelling/NetLogo/releasePoints/releasePoints.shp")
library(lubridate)
library(terra)
library(dplyr)
setwd("~/Corsica deer")
release_points <- vect("corsica_deer_ABM/Modelling/NetLogo/releasePoints/releasePoints.shp")
values <- values(release_points)
values$time <- as.numeric(values$time)
View(values)
values <- mutate(values, trad_date = as.POSIXct(time, origin = "1970-01-01"))
View(values)
# File list to be loaded
files <- list.files(path = "C:/Users/conno/Documents/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "measures_")
##### Number and explored patches ---------------------------
# File list
files <- list.files(path = "C:/Users/conno/Documents/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results", pattern = "measures_")
#Loading these files and joining them up
for (i in 1:length(files)) {
if (i == 1) {
data <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
data$sim_id <- sub("measures_", "", sub(".csv", "", files[i]))
colnames(data) <- c("2020", "2025", "2030", "2035", "2040", "sim_id")
row.names(data) <- c("deer", "mature_deer", "immature_deer", "visited_patches")
deer <- data[1,]
mature_deer <- data[2,]
immature_deer <- data[3,]
visited_patches <- data[4,]
} else {
additional_data <- read.csv(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/Results/", files[i]), header = F)
additional_data$sim_id <- sub("measures_", "", sub(".csv", "", files[i]))
colnames(additional_data) <- c("2020", "2025", "2030", "2035", "2040", "sim_id")
row.names(additional_data) <- c("deer", "mature_deer", "immature_deer", "visited_patches")
deer <- rbind(deer, additional_data[1,])
mature_deer <- rbind(mature_deer, additional_data[2,])
immature_deer <- rbind(immature_deer, additional_data[3,])
visited_patches <- rbind(visited_patches, additional_data[4,])
}
}
# Estimating mean total deer number of simulations
deer_summary <- colMeans(deer[,-6])
deer_summary <- rbind(deer_summary, apply(deer[,-6], 2, sd))
colnames(deer_summary) <- c("2020", "2025", "2030", "2035", "2040")
row.names(deer_summary) <- c("mean_deer", "sd_deer")
# Estimating mean mature deer number of simulations
mature_deer_summary <- colMeans(mature_deer[,-6])
mature_deer_summary <- rbind(mature_deer_summary, apply(mature_deer[,-6], 2, sd))
colnames(mature_deer_summary) <- c("2020", "2025", "2030", "2035", "2040")
row.names(mature_deer_summary) <- c("mean_mature_deer", "sd_mature_deer")
# Estimating mean immature deer number of simulations
immature_deer_summary <- colMeans(immature_deer[,-6])
immature_deer_summary <- rbind(immature_deer_summary, apply(immature_deer[,-6], 2, sd))
colnames(immature_deer_summary) <- c("2020", "2025", "2030", "2035", "2040")
row.names(immature_deer_summary) <- c("mean_immature_deer", "sd_immature_deer")
# Estimating mean immature:mature deer ratio
young_adult_ratio <- (immature_deer_summary/mature_deer_summary)[1,] # Target 0.325
# Estimating mean visited patches of simulations
visited_patches_summary <- colMeans(visited_patches[,-6])
visited_patches_summary <- rbind(visited_patches_summary, apply(visited_patches[,-6], 2, sd))
colnames(visited_patches_summary) <- c("2020", "2025", "2030", "2035", "2040")
row.names(visited_patches_summary) <- c("mean_visited_patches", "sd_visited_patches")
# Summarising all of these
summary <- rbind(deer_summary, mature_deer_summary, immature_deer_summary, young_adult_ratio, visited_patches_summary)
summary <- round(summary, 2)
summary <- as.data.frame(format(summary, scientific = FALSE))
# Tidying up rownames
library(tibble)
deer_numbers <- rownames_to_column(summary, "type")
# Reorganising the deer numbers summary data frame - need both means and sd in a format to go into ggplot
deer_numbers <- as.data.frame(deer_numbers[1:6,])
library(tidyr)
deer_numbers <- gather(deer_numbers, year, numbers, 2:6)
deer_numbers <- deer_numbers[order(deer_numbers$type),]
View(deer_numbers)
# Split 'type' into 'stat' (mean or sd) and 'category'(deer, immature etc)
deer_numbers <- separate(deer_numbers, type, into = c("stat", "category"),
sep = "_", extra = "merge")
View(deer_numbers)
# Reshape so that each row has year, category, mean and sd
deer_numbers <- pivot_wider(deer_numbers, names_from = stat, values_from = numbers)
View(deer_numbers)
# List all .asc files
asc_files <- list.files(pattern = "\\.asc$", full.names = TRUE)
# Setting working directory and loading outline map
outline <- vect("~/Corsica deer/corsica_deer_ABM/GIS/Administrative boundaries/corsica_outline.shp")
setwd(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/Model 4 - death/output_maps"))
# List all .asc files
asc_files <- list.files(pattern = "\\.asc$", full.names = TRUE)
strsplit(basename(asc_files[1]), "_")[[1]]
