asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
as.integer(tools::file_path_sans_ext(parts[length(parts)]))
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
rasters <- load_asc_files()
View(rasters)
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
load_asc_files <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
rasters <- load_asc_files()
plot(rasters)
library(terra)
library(raster)
#model_type <- "Model 1 - basic model"
#model_type <- "Model 2 - incorporating home range"
#model_type <- "Model 3 - breeding"
model_type <- "Model 4 - death"
outline <- vect("~/Corsica deer/corsica_deer_ABM/GIS/Administrative boundaries/corsica_outline.shp")
setwd(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"))
load_asc_files_by_year <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
load_asc_files_by_id <- function(folder_path) {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
rasters_by_id <- load_asc_files_by_id()
load_asc_files_by_id <- function() {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
rasters_by_id <- load_asc_files_by_id()
load_asc_files_by_year <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
load_asc_files_by_id <- function() {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
rasters_by_id <- load_asc_files_by_year()
rasters_by_year <- load_asc_files_by_id()
load_asc_files_by_id <- function(folder_path) {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
load_asc_files_by_year <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
load_asc_files_by_id <- function(folder_path) {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
load_asc_files_by_id <- function() {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
rasters_by_id <- load_asc_files_by_year()
#model_type <- "Model 1 - basic model"
#model_type <- "Model 2 - incorporating home range"
#model_type <- "Model 3 - breeding"
model_type <- "Model 4 - death"
outline <- vect("~/Corsica deer/corsica_deer_ABM/GIS/Administrative boundaries/corsica_outline.shp")
setwd(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"))
load_asc_files_by_year <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
load_asc_files_by_id <- function() {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
library(terra)
library(raster)
#model_type <- "Model 1 - basic model"
#model_type <- "Model 2 - incorporating home range"
#model_type <- "Model 3 - breeding"
model_type <- "Model 4 - death"
outline <- vect("~/Corsica deer/corsica_deer_ABM/GIS/Administrative boundaries/corsica_outline.shp")
setwd(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"))
load_asc_files_by_year <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
load_asc_files_by_id <- function() {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
rasters_by_id <- load_asc_files_by_year()
library(terra)
library(raster)
#model_type <- "Model 1 - basic model"
#model_type <- "Model 2 - incorporating home range"
#model_type <- "Model 3 - breeding"
model_type <- "Model 4 - death"
outline <- vect("~/Corsica deer/corsica_deer_ABM/GIS/Administrative boundaries/corsica_outline.shp")
setwd(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"))
load_asc_files_by_year <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
load_asc_files_by_id <- function() {
asc_files <- list.files(folder_path, pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
rasters_by_year <- load_asc_files_by_year()
rasters_by_id <- load_asc_files_by_id()
load_asc_files_by_year <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
load_asc_files_by_id <- function() {
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
library(terra)
library(raster)
#model_type <- "Model 1 - basic model"
#model_type <- "Model 2 - incorporating home range"
#model_type <- "Model 3 - breeding"
model_type <- "Model 4 - death"
outline <- vect("~/Corsica deer/corsica_deer_ABM/GIS/Administrative boundaries/corsica_outline.shp")
setwd(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"))
load_asc_files_by_year <- function() {
# Mapping from model years to calendar years
year_map <- c("3654" = 2020,
"7306" = 2025,
"10958" = 2030,
"14610" = 2035,
"18264" = 2040)
# List all .asc files
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
# Load each file into a SpatRaster
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f)) # Name the raster after the file
r
})
# Extract year from filenames
years <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
model_year <- tools::file_path_sans_ext(parts[length(parts)])
calendar_year <- year_map[model_year]
as.integer(calendar_year)
})
# Organize rasters into a list by year
rasters_by_year <- split(rasters, years)
return(rasters_by_year)
}
load_asc_files_by_id <- function() {
asc_files <- list.files(paste0("~/Corsica deer/corsica_deer_ABM/Modelling/NetLogo/", model_type, "/output_maps"), pattern = "\\.asc$", full.names = TRUE)
rasters <- lapply(asc_files, function(f) {
r <- rast(f)
names(r) <- tools::file_path_sans_ext(basename(f))
r
})
# Extract ID from filenames
ids <- sapply(asc_files, function(f) {
parts <- strsplit(basename(f), "_")[[1]]
id <- parts[2]  # ID is the second element: "n-visits_ID_ticks_year"
id
})
# Organize rasters into a list by ID
rasters_by_id <- split(rasters, ids)
return(rasters_by_id)
}
rasters_by_year <- load_asc_files_by_year()
rasters_by_id <- load_asc_files_by_id()
plot(rasters_by_id[[1]])
plot(rasters_by_id$`106258`)
plot(rasters_by_id$106258)
View(rasters_by_id)
plot(rasters_by_id[1])
plot(rasters_by_id[[1]])
test <- rasters_by_id[1]
View(test)
plot(test)
plot(test)
plot(test$`106258`)
plot(rasters_by_id)
plot(rasters_by_id)
rasters_by_id[["8273"]]
rasters_by_id[["106258"]]
plot(rasters_by_id[["106258"]])
plot(rast(rasters_by_id[["106258"]]))
